/*
* generated by Xtext
*/
package org.deg.xtext.gui.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class GuiDSLGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class UIDescriptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UIDescription");
		private final UnorderedGroup cUnorderedGroup = (UnorderedGroup)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cUnorderedGroup.eContents().get(0);
		private final Assignment cAreaCountAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cAreaCountAreaCountParserRuleCall_0_0_0 = (RuleCall)cAreaCountAssignment_0_0.eContents().get(0);
		private final Assignment cTypeDefinitionAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cTypeDefinitionTypeDefinitionParserRuleCall_0_1_0 = (RuleCall)cTypeDefinitionAssignment_0_1.eContents().get(0);
		private final Assignment cUsedDescriptionsAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cUsedDescriptionsUsedDescriptionsParserRuleCall_0_2_0 = (RuleCall)cUsedDescriptionsAssignment_0_2.eContents().get(0);
		private final Assignment cInputTypesAssignment_1 = (Assignment)cUnorderedGroup.eContents().get(1);
		private final RuleCall cInputTypesInputTypeParserRuleCall_1_0 = (RuleCall)cInputTypesAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cUnorderedGroup.eContents().get(2);
		private final Assignment cDefinitionsAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cDefinitionsDefinitionParserRuleCall_2_0_0 = (RuleCall)cDefinitionsAssignment_2_0.eContents().get(0);
		private final Assignment cAreasAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cAreasAreaAssignmentParserRuleCall_2_1_0 = (RuleCall)cAreasAssignment_2_1.eContents().get(0);
		
		//UIDescription:
		//	areaCount=AreaCount typeDefinition=TypeDefinition usedDescriptions+=UsedDescriptions* & inputTypes+=inputType* &
		//	definitions+=Definition* areas+=AreaAssignment*;
		public ParserRule getRule() { return rule; }

		//areaCount=AreaCount typeDefinition=TypeDefinition usedDescriptions+=UsedDescriptions* & inputTypes+=inputType* &
		//definitions+=Definition* areas+=AreaAssignment*
		public UnorderedGroup getUnorderedGroup() { return cUnorderedGroup; }

		//areaCount=AreaCount typeDefinition=TypeDefinition usedDescriptions+=UsedDescriptions*
		public Group getGroup_0() { return cGroup_0; }

		//areaCount=AreaCount
		public Assignment getAreaCountAssignment_0_0() { return cAreaCountAssignment_0_0; }

		//AreaCount
		public RuleCall getAreaCountAreaCountParserRuleCall_0_0_0() { return cAreaCountAreaCountParserRuleCall_0_0_0; }

		//typeDefinition=TypeDefinition
		public Assignment getTypeDefinitionAssignment_0_1() { return cTypeDefinitionAssignment_0_1; }

		//TypeDefinition
		public RuleCall getTypeDefinitionTypeDefinitionParserRuleCall_0_1_0() { return cTypeDefinitionTypeDefinitionParserRuleCall_0_1_0; }

		//usedDescriptions+=UsedDescriptions*
		public Assignment getUsedDescriptionsAssignment_0_2() { return cUsedDescriptionsAssignment_0_2; }

		//UsedDescriptions
		public RuleCall getUsedDescriptionsUsedDescriptionsParserRuleCall_0_2_0() { return cUsedDescriptionsUsedDescriptionsParserRuleCall_0_2_0; }

		//inputTypes+=inputType*
		public Assignment getInputTypesAssignment_1() { return cInputTypesAssignment_1; }

		//inputType
		public RuleCall getInputTypesInputTypeParserRuleCall_1_0() { return cInputTypesInputTypeParserRuleCall_1_0; }

		//definitions+=Definition* areas+=AreaAssignment*
		public Group getGroup_2() { return cGroup_2; }

		//definitions+=Definition*
		public Assignment getDefinitionsAssignment_2_0() { return cDefinitionsAssignment_2_0; }

		//Definition
		public RuleCall getDefinitionsDefinitionParserRuleCall_2_0_0() { return cDefinitionsDefinitionParserRuleCall_2_0_0; }

		//areas+=AreaAssignment*
		public Assignment getAreasAssignment_2_1() { return cAreasAssignment_2_1; }

		//AreaAssignment
		public RuleCall getAreasAreaAssignmentParserRuleCall_2_1_0() { return cAreasAreaAssignmentParserRuleCall_2_1_0; }
	}

	public class InputTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "inputType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cInputTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTypeSTRINGTerminalRuleCall_1_0 = (RuleCall)cTypeAssignment_1.eContents().get(0);
		private final Keyword cAsKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameSTRINGTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		
		//inputType:
		//	"inputType=" type=STRING " as " name=STRING;
		public ParserRule getRule() { return rule; }

		//"inputType=" type=STRING " as " name=STRING
		public Group getGroup() { return cGroup; }

		//"inputType="
		public Keyword getInputTypeKeyword_0() { return cInputTypeKeyword_0; }

		//type=STRING
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }

		//STRING
		public RuleCall getTypeSTRINGTerminalRuleCall_1_0() { return cTypeSTRINGTerminalRuleCall_1_0; }

		//" as "
		public Keyword getAsKeyword_2() { return cAsKeyword_2; }

		//name=STRING
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_3_0() { return cNameSTRINGTerminalRuleCall_3_0; }
	}

	public class UsedDescriptionsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UsedDescriptions");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUseKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cDescriptionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDescriptionUIDescriptionImportParserRuleCall_1_0 = (RuleCall)cDescriptionAssignment_1.eContents().get(0);
		
		//UsedDescriptions:
		//	"use: " description=UIDescriptionImport;
		public ParserRule getRule() { return rule; }

		//"use: " description=UIDescriptionImport
		public Group getGroup() { return cGroup; }

		//"use: "
		public Keyword getUseKeyword_0() { return cUseKeyword_0; }

		//description=UIDescriptionImport
		public Assignment getDescriptionAssignment_1() { return cDescriptionAssignment_1; }

		//UIDescriptionImport
		public RuleCall getDescriptionUIDescriptionImportParserRuleCall_1_0() { return cDescriptionUIDescriptionImportParserRuleCall_1_0; }
	}

	public class AreaCountElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AreaCount");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAreaCountKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cAreaCountAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cAreaCountINTTerminalRuleCall_1_0 = (RuleCall)cAreaCountAssignment_1.eContents().get(0);
		
		//AreaCount:
		//	"Area count: " areaCount=INT;
		public ParserRule getRule() { return rule; }

		//"Area count: " areaCount=INT
		public Group getGroup() { return cGroup; }

		//"Area count: "
		public Keyword getAreaCountKeyword_0() { return cAreaCountKeyword_0; }

		//areaCount=INT
		public Assignment getAreaCountAssignment_1() { return cAreaCountAssignment_1; }

		//INT
		public RuleCall getAreaCountINTTerminalRuleCall_1_0() { return cAreaCountINTTerminalRuleCall_1_0; }
	}

	public class DefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Definition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDEFKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cConcreteDefitionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cConcreteDefitionComponentDefinitionParserRuleCall_1_0 = (RuleCall)cConcreteDefitionAssignment_1.eContents().get(0);
		private final Keyword cENDDEFKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//Definition:
		//	"DEF " concreteDefition=ComponentDefinition "END DEF";
		public ParserRule getRule() { return rule; }

		//"DEF " concreteDefition=ComponentDefinition "END DEF"
		public Group getGroup() { return cGroup; }

		//"DEF "
		public Keyword getDEFKeyword_0() { return cDEFKeyword_0; }

		//concreteDefition=ComponentDefinition
		public Assignment getConcreteDefitionAssignment_1() { return cConcreteDefitionAssignment_1; }

		//ComponentDefinition
		public RuleCall getConcreteDefitionComponentDefinitionParserRuleCall_1_0() { return cConcreteDefitionComponentDefinitionParserRuleCall_1_0; }

		//"END DEF"
		public Keyword getENDDEFKeyword_2() { return cENDDEFKeyword_2; }
	}

	public class TypeDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TypeDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTypeTYPETerminalRuleCall_1_0 = (RuleCall)cTypeAssignment_1.eContents().get(0);
		
		//TypeDefinition:
		//	"type: " type=TYPE;
		public ParserRule getRule() { return rule; }

		//"type: " type=TYPE
		public Group getGroup() { return cGroup; }

		//"type: "
		public Keyword getTypeKeyword_0() { return cTypeKeyword_0; }

		//type=TYPE
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }

		//TYPE
		public RuleCall getTypeTYPETerminalRuleCall_1_0() { return cTypeTYPETerminalRuleCall_1_0; }
	}

	public class UIDescriptionImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UIDescriptionImport");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDescriptionNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDescriptionNameSTRINGTerminalRuleCall_0_0 = (RuleCall)cDescriptionNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cAsKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cLocalNameAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cLocalNameSTRINGTerminalRuleCall_1_1_0 = (RuleCall)cLocalNameAssignment_1_1.eContents().get(0);
		
		//UIDescriptionImport:
		//	descriptionName=STRING (" As: " localName=STRING)?;
		public ParserRule getRule() { return rule; }

		//descriptionName=STRING (" As: " localName=STRING)?
		public Group getGroup() { return cGroup; }

		//descriptionName=STRING
		public Assignment getDescriptionNameAssignment_0() { return cDescriptionNameAssignment_0; }

		//STRING
		public RuleCall getDescriptionNameSTRINGTerminalRuleCall_0_0() { return cDescriptionNameSTRINGTerminalRuleCall_0_0; }

		//(" As: " localName=STRING)?
		public Group getGroup_1() { return cGroup_1; }

		//" As: "
		public Keyword getAsKeyword_1_0() { return cAsKeyword_1_0; }

		//localName=STRING
		public Assignment getLocalNameAssignment_1_1() { return cLocalNameAssignment_1_1; }

		//STRING
		public RuleCall getLocalNameSTRINGTerminalRuleCall_1_1_0() { return cLocalNameSTRINGTerminalRuleCall_1_1_0; }
	}

	public class AreaAssignmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AreaAssignment");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cAreaKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cAreaAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cAreaINTTerminalRuleCall_0_1_0 = (RuleCall)cAreaAssignment_0_1.eContents().get(0);
		private final Keyword cLessThanSignHyphenMinusKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cElementAssignment_0_3 = (Assignment)cGroup_0.eContents().get(3);
		private final RuleCall cElementSTRINGTerminalRuleCall_0_3_0 = (RuleCall)cElementAssignment_0_3.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cElementAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cElementSTRINGTerminalRuleCall_1_0_0 = (RuleCall)cElementAssignment_1_0.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Keyword cAreaKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cAreaAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cAreaINTTerminalRuleCall_1_3_0 = (RuleCall)cAreaAssignment_1_3.eContents().get(0);
		
		//AreaAssignment:
		//	"Area:" area=INT "<-" element=STRING | element=STRING "->" "Area:" area=INT;
		public ParserRule getRule() { return rule; }

		//"Area:" area=INT "<-" element=STRING | element=STRING "->" "Area:" area=INT
		public Alternatives getAlternatives() { return cAlternatives; }

		//"Area:" area=INT "<-" element=STRING
		public Group getGroup_0() { return cGroup_0; }

		//"Area:"
		public Keyword getAreaKeyword_0_0() { return cAreaKeyword_0_0; }

		//area=INT
		public Assignment getAreaAssignment_0_1() { return cAreaAssignment_0_1; }

		//INT
		public RuleCall getAreaINTTerminalRuleCall_0_1_0() { return cAreaINTTerminalRuleCall_0_1_0; }

		//"<-"
		public Keyword getLessThanSignHyphenMinusKeyword_0_2() { return cLessThanSignHyphenMinusKeyword_0_2; }

		//element=STRING
		public Assignment getElementAssignment_0_3() { return cElementAssignment_0_3; }

		//STRING
		public RuleCall getElementSTRINGTerminalRuleCall_0_3_0() { return cElementSTRINGTerminalRuleCall_0_3_0; }

		//element=STRING "->" "Area:" area=INT
		public Group getGroup_1() { return cGroup_1; }

		//element=STRING
		public Assignment getElementAssignment_1_0() { return cElementAssignment_1_0; }

		//STRING
		public RuleCall getElementSTRINGTerminalRuleCall_1_0_0() { return cElementSTRINGTerminalRuleCall_1_0_0; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_1_1() { return cHyphenMinusGreaterThanSignKeyword_1_1; }

		//"Area:"
		public Keyword getAreaKeyword_1_2() { return cAreaKeyword_1_2; }

		//area=INT
		public Assignment getAreaAssignment_1_3() { return cAreaAssignment_1_3; }

		//INT
		public RuleCall getAreaINTTerminalRuleCall_1_3_0() { return cAreaINTTerminalRuleCall_1_3_0; }
	}

	public class ComponentDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ComponentDefinition");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cLabelDefinitionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cButtonDefinitionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cTextfieldDefinitionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cTreeDefinitionParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cTableDefinitionParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cRadioboxDefinitionParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cCheckboxDefinitionParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cMultiSelectionDefinitionParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		
		//ComponentDefinition:
		//	LabelDefinition | ButtonDefinition | TextfieldDefinition | TreeDefinition | TableDefinition | RadioboxDefinition |
		//	CheckboxDefinition | MultiSelectionDefinition;
		public ParserRule getRule() { return rule; }

		//LabelDefinition | ButtonDefinition | TextfieldDefinition | TreeDefinition | TableDefinition | RadioboxDefinition |
		//CheckboxDefinition | MultiSelectionDefinition
		public Alternatives getAlternatives() { return cAlternatives; }

		//LabelDefinition
		public RuleCall getLabelDefinitionParserRuleCall_0() { return cLabelDefinitionParserRuleCall_0; }

		//ButtonDefinition
		public RuleCall getButtonDefinitionParserRuleCall_1() { return cButtonDefinitionParserRuleCall_1; }

		//TextfieldDefinition
		public RuleCall getTextfieldDefinitionParserRuleCall_2() { return cTextfieldDefinitionParserRuleCall_2; }

		//TreeDefinition
		public RuleCall getTreeDefinitionParserRuleCall_3() { return cTreeDefinitionParserRuleCall_3; }

		//TableDefinition
		public RuleCall getTableDefinitionParserRuleCall_4() { return cTableDefinitionParserRuleCall_4; }

		//RadioboxDefinition
		public RuleCall getRadioboxDefinitionParserRuleCall_5() { return cRadioboxDefinitionParserRuleCall_5; }

		//CheckboxDefinition
		public RuleCall getCheckboxDefinitionParserRuleCall_6() { return cCheckboxDefinitionParserRuleCall_6; }

		//MultiSelectionDefinition
		public RuleCall getMultiSelectionDefinitionParserRuleCall_7() { return cMultiSelectionDefinitionParserRuleCall_7; }
	}

	public class MultiSelectionDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MultiSelectionDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cTypeMultiSelectionKeyword_0_0 = (Keyword)cTypeAssignment_0.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cInputTypeKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cInputTypeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cInputTypeSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cInputTypeAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cSelectableValuesKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cSelectableValuesLocationAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cSelectableValuesLocationSTRINGTerminalRuleCall_3_2_1_0 = (RuleCall)cSelectableValuesLocationAssignment_3_2_1.eContents().get(0);
		private final Group cGroup_3_2_2 = (Group)cGroup_3_2.eContents().get(2);
		private final Keyword cSelectedValuesKeyword_3_2_2_0 = (Keyword)cGroup_3_2_2.eContents().get(0);
		private final Assignment cSelectedValuesLocationAssignment_3_2_2_1 = (Assignment)cGroup_3_2_2.eContents().get(1);
		private final RuleCall cSelectedValuesLocationSTRINGTerminalRuleCall_3_2_2_1_0 = (RuleCall)cSelectedValuesLocationAssignment_3_2_2_1.eContents().get(0);
		
		//MultiSelectionDefinition:
		//	type="MultiSelection" " as " name=STRING ("inputType=" inputType=STRING ("selectableValues="
		//	selectableValuesLocation=STRING ("selectedValues=" selectedValuesLocation=STRING)?)?)?;
		public ParserRule getRule() { return rule; }

		//type="MultiSelection" " as " name=STRING ("inputType=" inputType=STRING ("selectableValues="
		//selectableValuesLocation=STRING ("selectedValues=" selectedValuesLocation=STRING)?)?)?
		public Group getGroup() { return cGroup; }

		//type="MultiSelection"
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }

		//"MultiSelection"
		public Keyword getTypeMultiSelectionKeyword_0_0() { return cTypeMultiSelectionKeyword_0_0; }

		//" as "
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }

		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }

		//("inputType=" inputType=STRING ("selectableValues=" selectableValuesLocation=STRING ("selectedValues="
		//selectedValuesLocation=STRING)?)?)?
		public Group getGroup_3() { return cGroup_3; }

		//"inputType="
		public Keyword getInputTypeKeyword_3_0() { return cInputTypeKeyword_3_0; }

		//inputType=STRING
		public Assignment getInputTypeAssignment_3_1() { return cInputTypeAssignment_3_1; }

		//STRING
		public RuleCall getInputTypeSTRINGTerminalRuleCall_3_1_0() { return cInputTypeSTRINGTerminalRuleCall_3_1_0; }

		//("selectableValues=" selectableValuesLocation=STRING ("selectedValues=" selectedValuesLocation=STRING)?)?
		public Group getGroup_3_2() { return cGroup_3_2; }

		//"selectableValues="
		public Keyword getSelectableValuesKeyword_3_2_0() { return cSelectableValuesKeyword_3_2_0; }

		//selectableValuesLocation=STRING
		public Assignment getSelectableValuesLocationAssignment_3_2_1() { return cSelectableValuesLocationAssignment_3_2_1; }

		//STRING
		public RuleCall getSelectableValuesLocationSTRINGTerminalRuleCall_3_2_1_0() { return cSelectableValuesLocationSTRINGTerminalRuleCall_3_2_1_0; }

		//("selectedValues=" selectedValuesLocation=STRING)?
		public Group getGroup_3_2_2() { return cGroup_3_2_2; }

		//"selectedValues="
		public Keyword getSelectedValuesKeyword_3_2_2_0() { return cSelectedValuesKeyword_3_2_2_0; }

		//selectedValuesLocation=STRING
		public Assignment getSelectedValuesLocationAssignment_3_2_2_1() { return cSelectedValuesLocationAssignment_3_2_2_1; }

		//STRING
		public RuleCall getSelectedValuesLocationSTRINGTerminalRuleCall_3_2_2_1_0() { return cSelectedValuesLocationSTRINGTerminalRuleCall_3_2_2_1_0; }
	}

	public class CheckboxDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CheckboxDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cTypeCheckboxKeyword_0_0 = (Keyword)cTypeAssignment_0.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTextKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTextAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cTextSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cTextAssignment_4_1.eContents().get(0);
		
		//CheckboxDefinition:
		//	type="Checkbox" " as " name=STRING ":" ("text=" text=STRING)?;
		public ParserRule getRule() { return rule; }

		//type="Checkbox" " as " name=STRING ":" ("text=" text=STRING)?
		public Group getGroup() { return cGroup; }

		//type="Checkbox"
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }

		//"Checkbox"
		public Keyword getTypeCheckboxKeyword_0_0() { return cTypeCheckboxKeyword_0_0; }

		//" as "
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }

		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }

		//":"
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }

		//("text=" text=STRING)?
		public Group getGroup_4() { return cGroup_4; }

		//"text="
		public Keyword getTextKeyword_4_0() { return cTextKeyword_4_0; }

		//text=STRING
		public Assignment getTextAssignment_4_1() { return cTextAssignment_4_1; }

		//STRING
		public RuleCall getTextSTRINGTerminalRuleCall_4_1_0() { return cTextSTRINGTerminalRuleCall_4_1_0; }
	}

	public class RadioboxDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RadioboxDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cTypeRadioboxKeyword_0_0 = (Keyword)cTypeAssignment_0.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTextKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTextAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cTextSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cTextAssignment_4_1.eContents().get(0);
		
		//RadioboxDefinition:
		//	type="Radiobox" " as " name=STRING ":" ("text=" text=STRING)?;
		public ParserRule getRule() { return rule; }

		//type="Radiobox" " as " name=STRING ":" ("text=" text=STRING)?
		public Group getGroup() { return cGroup; }

		//type="Radiobox"
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }

		//"Radiobox"
		public Keyword getTypeRadioboxKeyword_0_0() { return cTypeRadioboxKeyword_0_0; }

		//" as "
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }

		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }

		//":"
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }

		//("text=" text=STRING)?
		public Group getGroup_4() { return cGroup_4; }

		//"text="
		public Keyword getTextKeyword_4_0() { return cTextKeyword_4_0; }

		//text=STRING
		public Assignment getTextAssignment_4_1() { return cTextAssignment_4_1; }

		//STRING
		public RuleCall getTextSTRINGTerminalRuleCall_4_1_0() { return cTextSTRINGTerminalRuleCall_4_1_0; }
	}

	public class TableDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TableDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cTypeTableKeyword_0_0 = (Keyword)cTypeAssignment_0.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTextKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTextAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cTextSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cTextAssignment_4_1.eContents().get(0);
		
		//TableDefinition:
		//	type="Table" " as " name=STRING ":" ("text=" text=STRING)?;
		public ParserRule getRule() { return rule; }

		//type="Table" " as " name=STRING ":" ("text=" text=STRING)?
		public Group getGroup() { return cGroup; }

		//type="Table"
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }

		//"Table"
		public Keyword getTypeTableKeyword_0_0() { return cTypeTableKeyword_0_0; }

		//" as "
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }

		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }

		//":"
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }

		//("text=" text=STRING)?
		public Group getGroup_4() { return cGroup_4; }

		//"text="
		public Keyword getTextKeyword_4_0() { return cTextKeyword_4_0; }

		//text=STRING
		public Assignment getTextAssignment_4_1() { return cTextAssignment_4_1; }

		//STRING
		public RuleCall getTextSTRINGTerminalRuleCall_4_1_0() { return cTextSTRINGTerminalRuleCall_4_1_0; }
	}

	public class TreeDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TreeDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cTypeTreeKeyword_0_0 = (Keyword)cTypeAssignment_0.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTextKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTextAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cTextSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cTextAssignment_4_1.eContents().get(0);
		
		//TreeDefinition:
		//	type="Tree" " as " name=STRING ":" ("text=" text=STRING)?;
		public ParserRule getRule() { return rule; }

		//type="Tree" " as " name=STRING ":" ("text=" text=STRING)?
		public Group getGroup() { return cGroup; }

		//type="Tree"
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }

		//"Tree"
		public Keyword getTypeTreeKeyword_0_0() { return cTypeTreeKeyword_0_0; }

		//" as "
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }

		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }

		//":"
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }

		//("text=" text=STRING)?
		public Group getGroup_4() { return cGroup_4; }

		//"text="
		public Keyword getTextKeyword_4_0() { return cTextKeyword_4_0; }

		//text=STRING
		public Assignment getTextAssignment_4_1() { return cTextAssignment_4_1; }

		//STRING
		public RuleCall getTextSTRINGTerminalRuleCall_4_1_0() { return cTextSTRINGTerminalRuleCall_4_1_0; }
	}

	public class TextfieldDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TextfieldDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cTypeTextfieldKeyword_0_0 = (Keyword)cTypeAssignment_0.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTextKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTextAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cTextSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cTextAssignment_4_1.eContents().get(0);
		
		//TextfieldDefinition:
		//	type="Textfield" " as " name=STRING ":" ("text=" text=STRING)?;
		public ParserRule getRule() { return rule; }

		//type="Textfield" " as " name=STRING ":" ("text=" text=STRING)?
		public Group getGroup() { return cGroup; }

		//type="Textfield"
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }

		//"Textfield"
		public Keyword getTypeTextfieldKeyword_0_0() { return cTypeTextfieldKeyword_0_0; }

		//" as "
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }

		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }

		//":"
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }

		//("text=" text=STRING)?
		public Group getGroup_4() { return cGroup_4; }

		//"text="
		public Keyword getTextKeyword_4_0() { return cTextKeyword_4_0; }

		//text=STRING
		public Assignment getTextAssignment_4_1() { return cTextAssignment_4_1; }

		//STRING
		public RuleCall getTextSTRINGTerminalRuleCall_4_1_0() { return cTextSTRINGTerminalRuleCall_4_1_0; }
	}

	public class ButtonDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ButtonDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cTypeButtonKeyword_0_0 = (Keyword)cTypeAssignment_0.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTextKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTextAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cTextSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cTextAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cInteractionKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cInteractionAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cInteractionInteractionParserRuleCall_5_1_0 = (RuleCall)cInteractionAssignment_5_1.eContents().get(0);
		
		//ButtonDefinition:
		//	type="Button" " as " name=STRING ":" ("text=" text=STRING)? ("interaction=" interaction=Interaction)?;
		public ParserRule getRule() { return rule; }

		//type="Button" " as " name=STRING ":" ("text=" text=STRING)? ("interaction=" interaction=Interaction)?
		public Group getGroup() { return cGroup; }

		//type="Button"
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }

		//"Button"
		public Keyword getTypeButtonKeyword_0_0() { return cTypeButtonKeyword_0_0; }

		//" as "
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }

		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }

		//":"
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }

		//("text=" text=STRING)?
		public Group getGroup_4() { return cGroup_4; }

		//"text="
		public Keyword getTextKeyword_4_0() { return cTextKeyword_4_0; }

		//text=STRING
		public Assignment getTextAssignment_4_1() { return cTextAssignment_4_1; }

		//STRING
		public RuleCall getTextSTRINGTerminalRuleCall_4_1_0() { return cTextSTRINGTerminalRuleCall_4_1_0; }

		//("interaction=" interaction=Interaction)?
		public Group getGroup_5() { return cGroup_5; }

		//"interaction="
		public Keyword getInteractionKeyword_5_0() { return cInteractionKeyword_5_0; }

		//interaction=Interaction
		public Assignment getInteractionAssignment_5_1() { return cInteractionAssignment_5_1; }

		//Interaction
		public RuleCall getInteractionInteractionParserRuleCall_5_1_0() { return cInteractionInteractionParserRuleCall_5_1_0; }
	}

	public class InteractionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Interaction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameSTRINGTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cInteractiontypeParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cWithActionsKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cActionsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cActionsUIActionParserRuleCall_4_0 = (RuleCall)cActionsAssignment_4.eContents().get(0);
		
		//Interaction:
		//	name=STRING " type=" Interactiontype " with actions:" actions+=UIAction*;
		public ParserRule getRule() { return rule; }

		//name=STRING " type=" Interactiontype " with actions:" actions+=UIAction*
		public Group getGroup() { return cGroup; }

		//name=STRING
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_0_0() { return cNameSTRINGTerminalRuleCall_0_0; }

		//" type="
		public Keyword getTypeKeyword_1() { return cTypeKeyword_1; }

		//Interactiontype
		public RuleCall getInteractiontypeParserRuleCall_2() { return cInteractiontypeParserRuleCall_2; }

		//" with actions:"
		public Keyword getWithActionsKeyword_3() { return cWithActionsKeyword_3; }

		//actions+=UIAction*
		public Assignment getActionsAssignment_4() { return cActionsAssignment_4; }

		//UIAction
		public RuleCall getActionsUIActionParserRuleCall_4_0() { return cActionsUIActionParserRuleCall_4_0; }
	}

	public class LabelDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LabelDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cTypeLabelKeyword_0_0 = (Keyword)cTypeAssignment_0.eContents().get(0);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTextKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTextAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cTextSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cTextAssignment_4_1.eContents().get(0);
		
		//LabelDefinition:
		//	type="Label" " as " name=STRING ":" ("text=" text=STRING)?;
		public ParserRule getRule() { return rule; }

		//type="Label" " as " name=STRING ":" ("text=" text=STRING)?
		public Group getGroup() { return cGroup; }

		//type="Label"
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }

		//"Label"
		public Keyword getTypeLabelKeyword_0_0() { return cTypeLabelKeyword_0_0; }

		//" as "
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }

		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }

		//":"
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }

		//("text=" text=STRING)?
		public Group getGroup_4() { return cGroup_4; }

		//"text="
		public Keyword getTextKeyword_4_0() { return cTextKeyword_4_0; }

		//text=STRING
		public Assignment getTextAssignment_4_1() { return cTextAssignment_4_1; }

		//STRING
		public RuleCall getTextSTRINGTerminalRuleCall_4_1_0() { return cTextSTRINGTerminalRuleCall_4_1_0; }
	}

	public class UIActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UIAction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cTypeUiActionKeyword_1_0 = (Keyword)cTypeAssignment_1.eContents().get(0);
		private final Keyword cElementKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cUiElementNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cUiElementNameSTRINGTerminalRuleCall_3_0 = (RuleCall)cUiElementNameAssignment_3.eContents().get(0);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cPropertiesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cPropertiesPropertyParserRuleCall_5_0 = (RuleCall)cPropertiesAssignment_5.eContents().get(0);
		
		//UIAction:
		//	"type=" type="UiAction" "element=" uiElementName=STRING ":" properties+=Property*;
		public ParserRule getRule() { return rule; }

		//"type=" type="UiAction" "element=" uiElementName=STRING ":" properties+=Property*
		public Group getGroup() { return cGroup; }

		//"type="
		public Keyword getTypeKeyword_0() { return cTypeKeyword_0; }

		//type="UiAction"
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }

		//"UiAction"
		public Keyword getTypeUiActionKeyword_1_0() { return cTypeUiActionKeyword_1_0; }

		//"element="
		public Keyword getElementKeyword_2() { return cElementKeyword_2; }

		//uiElementName=STRING
		public Assignment getUiElementNameAssignment_3() { return cUiElementNameAssignment_3; }

		//STRING
		public RuleCall getUiElementNameSTRINGTerminalRuleCall_3_0() { return cUiElementNameSTRINGTerminalRuleCall_3_0; }

		//":"
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }

		//properties+=Property*
		public Assignment getPropertiesAssignment_5() { return cPropertiesAssignment_5; }

		//Property
		public RuleCall getPropertiesPropertyParserRuleCall_5_0() { return cPropertiesPropertyParserRuleCall_5_0; }
	}

	public class PropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Property");
		private final RuleCall cCommonPropertyParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//Property:
		//	CommonProperty;
		public ParserRule getRule() { return rule; }

		//CommonProperty
		public RuleCall getCommonPropertyParserRuleCall() { return cCommonPropertyParserRuleCall; }
	}

	public class CommonPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CommonProperty");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameCommonPropertyTypeParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueSTRINGTerminalRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//CommonProperty:
		//	name=CommonPropertyType "=" value=STRING;
		public ParserRule getRule() { return rule; }

		//name=CommonPropertyType "=" value=STRING
		public Group getGroup() { return cGroup; }

		//name=CommonPropertyType
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//CommonPropertyType
		public RuleCall getNameCommonPropertyTypeParserRuleCall_0_0() { return cNameCommonPropertyTypeParserRuleCall_0_0; }

		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }

		//value=STRING
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_2_0() { return cValueSTRINGTerminalRuleCall_2_0; }
	}

	public class CommonPropertyTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CommonPropertyType");
		private final Keyword cTextKeyword = (Keyword)rule.eContents().get(1);
		
		//CommonPropertyType:
		//	"Text";
		public ParserRule getRule() { return rule; }

		//"Text"
		public Keyword getTextKeyword() { return cTextKeyword; }
	}

	public class InteractiontypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Interactiontype");
		private final Keyword cCLICKKeyword = (Keyword)rule.eContents().get(1);
		
		//Interactiontype:
		//	"CLICK";
		public ParserRule getRule() { return rule; }

		//"CLICK"
		public Keyword getCLICKKeyword() { return cCLICKKeyword; }
	}
	
	
	private final UIDescriptionElements pUIDescription;
	private final InputTypeElements pInputType;
	private final UsedDescriptionsElements pUsedDescriptions;
	private final AreaCountElements pAreaCount;
	private final DefinitionElements pDefinition;
	private final TypeDefinitionElements pTypeDefinition;
	private final TerminalRule tTYPE;
	private final UIDescriptionImportElements pUIDescriptionImport;
	private final AreaAssignmentElements pAreaAssignment;
	private final ComponentDefinitionElements pComponentDefinition;
	private final MultiSelectionDefinitionElements pMultiSelectionDefinition;
	private final CheckboxDefinitionElements pCheckboxDefinition;
	private final RadioboxDefinitionElements pRadioboxDefinition;
	private final TableDefinitionElements pTableDefinition;
	private final TreeDefinitionElements pTreeDefinition;
	private final TextfieldDefinitionElements pTextfieldDefinition;
	private final ButtonDefinitionElements pButtonDefinition;
	private final InteractionElements pInteraction;
	private final LabelDefinitionElements pLabelDefinition;
	private final UIActionElements pUIAction;
	private final PropertyElements pProperty;
	private final CommonPropertyElements pCommonProperty;
	private final CommonPropertyTypeElements pCommonPropertyType;
	private final InteractiontypeElements pInteractiontype;
	
	private final Grammar grammar;

	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public GuiDSLGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pUIDescription = new UIDescriptionElements();
		this.pInputType = new InputTypeElements();
		this.pUsedDescriptions = new UsedDescriptionsElements();
		this.pAreaCount = new AreaCountElements();
		this.pDefinition = new DefinitionElements();
		this.pTypeDefinition = new TypeDefinitionElements();
		this.tTYPE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "TYPE");
		this.pUIDescriptionImport = new UIDescriptionImportElements();
		this.pAreaAssignment = new AreaAssignmentElements();
		this.pComponentDefinition = new ComponentDefinitionElements();
		this.pMultiSelectionDefinition = new MultiSelectionDefinitionElements();
		this.pCheckboxDefinition = new CheckboxDefinitionElements();
		this.pRadioboxDefinition = new RadioboxDefinitionElements();
		this.pTableDefinition = new TableDefinitionElements();
		this.pTreeDefinition = new TreeDefinitionElements();
		this.pTextfieldDefinition = new TextfieldDefinitionElements();
		this.pButtonDefinition = new ButtonDefinitionElements();
		this.pInteraction = new InteractionElements();
		this.pLabelDefinition = new LabelDefinitionElements();
		this.pUIAction = new UIActionElements();
		this.pProperty = new PropertyElements();
		this.pCommonProperty = new CommonPropertyElements();
		this.pCommonPropertyType = new CommonPropertyTypeElements();
		this.pInteractiontype = new InteractiontypeElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.deg.xtext.gui.GuiDSL".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//UIDescription:
	//	areaCount=AreaCount typeDefinition=TypeDefinition usedDescriptions+=UsedDescriptions* & inputTypes+=inputType* &
	//	definitions+=Definition* areas+=AreaAssignment*;
	public UIDescriptionElements getUIDescriptionAccess() {
		return pUIDescription;
	}
	
	public ParserRule getUIDescriptionRule() {
		return getUIDescriptionAccess().getRule();
	}

	//inputType:
	//	"inputType=" type=STRING " as " name=STRING;
	public InputTypeElements getInputTypeAccess() {
		return pInputType;
	}
	
	public ParserRule getInputTypeRule() {
		return getInputTypeAccess().getRule();
	}

	//UsedDescriptions:
	//	"use: " description=UIDescriptionImport;
	public UsedDescriptionsElements getUsedDescriptionsAccess() {
		return pUsedDescriptions;
	}
	
	public ParserRule getUsedDescriptionsRule() {
		return getUsedDescriptionsAccess().getRule();
	}

	//AreaCount:
	//	"Area count: " areaCount=INT;
	public AreaCountElements getAreaCountAccess() {
		return pAreaCount;
	}
	
	public ParserRule getAreaCountRule() {
		return getAreaCountAccess().getRule();
	}

	//Definition:
	//	"DEF " concreteDefition=ComponentDefinition "END DEF";
	public DefinitionElements getDefinitionAccess() {
		return pDefinition;
	}
	
	public ParserRule getDefinitionRule() {
		return getDefinitionAccess().getRule();
	}

	//TypeDefinition:
	//	"type: " type=TYPE;
	public TypeDefinitionElements getTypeDefinitionAccess() {
		return pTypeDefinition;
	}
	
	public ParserRule getTypeDefinitionRule() {
		return getTypeDefinitionAccess().getRule();
	}

	//terminal TYPE:
	//	"WINDOW" | "INNERCOMPLEX";
	public TerminalRule getTYPERule() {
		return tTYPE;
	} 

	//UIDescriptionImport:
	//	descriptionName=STRING (" As: " localName=STRING)?;
	public UIDescriptionImportElements getUIDescriptionImportAccess() {
		return pUIDescriptionImport;
	}
	
	public ParserRule getUIDescriptionImportRule() {
		return getUIDescriptionImportAccess().getRule();
	}

	//AreaAssignment:
	//	"Area:" area=INT "<-" element=STRING | element=STRING "->" "Area:" area=INT;
	public AreaAssignmentElements getAreaAssignmentAccess() {
		return pAreaAssignment;
	}
	
	public ParserRule getAreaAssignmentRule() {
		return getAreaAssignmentAccess().getRule();
	}

	//ComponentDefinition:
	//	LabelDefinition | ButtonDefinition | TextfieldDefinition | TreeDefinition | TableDefinition | RadioboxDefinition |
	//	CheckboxDefinition | MultiSelectionDefinition;
	public ComponentDefinitionElements getComponentDefinitionAccess() {
		return pComponentDefinition;
	}
	
	public ParserRule getComponentDefinitionRule() {
		return getComponentDefinitionAccess().getRule();
	}

	//MultiSelectionDefinition:
	//	type="MultiSelection" " as " name=STRING ("inputType=" inputType=STRING ("selectableValues="
	//	selectableValuesLocation=STRING ("selectedValues=" selectedValuesLocation=STRING)?)?)?;
	public MultiSelectionDefinitionElements getMultiSelectionDefinitionAccess() {
		return pMultiSelectionDefinition;
	}
	
	public ParserRule getMultiSelectionDefinitionRule() {
		return getMultiSelectionDefinitionAccess().getRule();
	}

	//CheckboxDefinition:
	//	type="Checkbox" " as " name=STRING ":" ("text=" text=STRING)?;
	public CheckboxDefinitionElements getCheckboxDefinitionAccess() {
		return pCheckboxDefinition;
	}
	
	public ParserRule getCheckboxDefinitionRule() {
		return getCheckboxDefinitionAccess().getRule();
	}

	//RadioboxDefinition:
	//	type="Radiobox" " as " name=STRING ":" ("text=" text=STRING)?;
	public RadioboxDefinitionElements getRadioboxDefinitionAccess() {
		return pRadioboxDefinition;
	}
	
	public ParserRule getRadioboxDefinitionRule() {
		return getRadioboxDefinitionAccess().getRule();
	}

	//TableDefinition:
	//	type="Table" " as " name=STRING ":" ("text=" text=STRING)?;
	public TableDefinitionElements getTableDefinitionAccess() {
		return pTableDefinition;
	}
	
	public ParserRule getTableDefinitionRule() {
		return getTableDefinitionAccess().getRule();
	}

	//TreeDefinition:
	//	type="Tree" " as " name=STRING ":" ("text=" text=STRING)?;
	public TreeDefinitionElements getTreeDefinitionAccess() {
		return pTreeDefinition;
	}
	
	public ParserRule getTreeDefinitionRule() {
		return getTreeDefinitionAccess().getRule();
	}

	//TextfieldDefinition:
	//	type="Textfield" " as " name=STRING ":" ("text=" text=STRING)?;
	public TextfieldDefinitionElements getTextfieldDefinitionAccess() {
		return pTextfieldDefinition;
	}
	
	public ParserRule getTextfieldDefinitionRule() {
		return getTextfieldDefinitionAccess().getRule();
	}

	//ButtonDefinition:
	//	type="Button" " as " name=STRING ":" ("text=" text=STRING)? ("interaction=" interaction=Interaction)?;
	public ButtonDefinitionElements getButtonDefinitionAccess() {
		return pButtonDefinition;
	}
	
	public ParserRule getButtonDefinitionRule() {
		return getButtonDefinitionAccess().getRule();
	}

	//Interaction:
	//	name=STRING " type=" Interactiontype " with actions:" actions+=UIAction*;
	public InteractionElements getInteractionAccess() {
		return pInteraction;
	}
	
	public ParserRule getInteractionRule() {
		return getInteractionAccess().getRule();
	}

	//LabelDefinition:
	//	type="Label" " as " name=STRING ":" ("text=" text=STRING)?;
	public LabelDefinitionElements getLabelDefinitionAccess() {
		return pLabelDefinition;
	}
	
	public ParserRule getLabelDefinitionRule() {
		return getLabelDefinitionAccess().getRule();
	}

	//UIAction:
	//	"type=" type="UiAction" "element=" uiElementName=STRING ":" properties+=Property*;
	public UIActionElements getUIActionAccess() {
		return pUIAction;
	}
	
	public ParserRule getUIActionRule() {
		return getUIActionAccess().getRule();
	}

	//Property:
	//	CommonProperty;
	public PropertyElements getPropertyAccess() {
		return pProperty;
	}
	
	public ParserRule getPropertyRule() {
		return getPropertyAccess().getRule();
	}

	//CommonProperty:
	//	name=CommonPropertyType "=" value=STRING;
	public CommonPropertyElements getCommonPropertyAccess() {
		return pCommonProperty;
	}
	
	public ParserRule getCommonPropertyRule() {
		return getCommonPropertyAccess().getRule();
	}

	//CommonPropertyType:
	//	"Text";
	public CommonPropertyTypeElements getCommonPropertyTypeAccess() {
		return pCommonPropertyType;
	}
	
	public ParserRule getCommonPropertyTypeRule() {
		return getCommonPropertyTypeAccess().getRule();
	}

	//Interactiontype:
	//	"CLICK";
	public InteractiontypeElements getInteractiontypeAccess() {
		return pInteractiontype;
	}
	
	public ParserRule getInteractiontypeRule() {
		return getInteractiontypeAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" . / * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\""))* "\"" | "\'" ("\\" .
	//	/ * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
