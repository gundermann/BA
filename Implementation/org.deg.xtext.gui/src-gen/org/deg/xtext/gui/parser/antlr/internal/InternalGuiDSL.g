/*
* generated by Xtext
*/
grammar InternalGuiDSL;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.deg.xtext.gui.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.deg.xtext.gui.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.deg.xtext.gui.services.GuiDSLGrammarAccess;

}

@parser::members {

 	private GuiDSLGrammarAccess grammarAccess;
 	
    public InternalGuiDSLParser(TokenStream input, GuiDSLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "UIDescription";	
   	}
   	
   	@Override
   	protected GuiDSLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleUIDescription
entryRuleUIDescription returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUIDescriptionRule()); }
	 iv_ruleUIDescription=ruleUIDescription 
	 { $current=$iv_ruleUIDescription.current; } 
	 EOF 
;

// Rule UIDescription
ruleUIDescription returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getUIDescriptionAccess().getTypeDefinitionTypeDefinitionParserRuleCall_0_0()); 
	    }
		lv_typeDefinition_0_0=ruleTypeDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUIDescriptionRule());
	        }
       		set(
       			$current, 
       			"typeDefinition",
        		lv_typeDefinition_0_0, 
        		"TypeDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getUIDescriptionAccess().getPropertyPropertyParserRuleCall_1_0()); 
	    }
		lv_property_1_0=ruleProperty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUIDescriptionRule());
	        }
       		set(
       			$current, 
       			"property",
        		lv_property_1_0, 
        		"Property");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getUIDescriptionAccess().getUsedDescriptionsUsedDescriptionsParserRuleCall_2_0()); 
	    }
		lv_usedDescriptions_2_0=ruleUsedDescriptions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUIDescriptionRule());
	        }
       		add(
       			$current, 
       			"usedDescriptions",
        		lv_usedDescriptions_2_0, 
        		"UsedDescriptions");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getUIDescriptionAccess().getRefinementsRefinementParserRuleCall_3_0()); 
	    }
		lv_refinements_3_0=ruleRefinement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUIDescriptionRule());
	        }
       		add(
       			$current, 
       			"refinements",
        		lv_refinements_3_0, 
        		"Refinement");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getUIDescriptionAccess().getDefinitionsDefinitionParserRuleCall_4_0()); 
	    }
		lv_definitions_4_0=ruleDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUIDescriptionRule());
	        }
       		add(
       			$current, 
       			"definitions",
        		lv_definitions_4_0, 
        		"Definition");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getUIDescriptionAccess().getStructureStructureParserRuleCall_5_0()); 
	    }
		lv_structure_5_0=ruleStructure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUIDescriptionRule());
	        }
       		set(
       			$current, 
       			"structure",
        		lv_structure_5_0, 
        		"Structure");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleStructure
entryRuleStructure returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStructureRule()); }
	 iv_ruleStructure=ruleStructure 
	 { $current=$iv_ruleStructure.current; } 
	 EOF 
;

// Rule Structure
ruleStructure returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'Structure' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getStructureAccess().getNameStructureKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStructureRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "Structure");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getStructureAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStructureAccess().getOrderedElementsElementParserRuleCall_2_0()); 
	    }
		lv_orderedElements_2_0=ruleElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructureRule());
	        }
       		add(
       			$current, 
       			"orderedElements",
        		lv_orderedElements_2_0, 
        		"Element");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleElement
entryRuleElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getElementRule()); }
	 iv_ruleElement=ruleElement 
	 { $current=$iv_ruleElement.current; } 
	 EOF 
;

// Rule Element
ruleElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_id_0_0=RULE_STRING
		{
			newLeafNode(lv_id_0_0, grammarAccess.getElementAccess().getIdSTRINGTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_0_0, 
        		"STRING");
	    }

)
)
;





// Entry rule entryRuleRefinement
entryRuleRefinement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRefinementRule()); }
	 iv_ruleRefinement=ruleRefinement 
	 { $current=$iv_ruleRefinement.current; } 
	 EOF 
;

// Rule Refinement
ruleRefinement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getRefinementAccess().getConcreteRefinementComponentRefinementParserRuleCall_0_0()); 
	    }
		lv_concreteRefinement_0_0=ruleComponentRefinement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRefinementRule());
	        }
       		set(
       			$current, 
       			"concreteRefinement",
        		lv_concreteRefinement_0_0, 
        		"ComponentRefinement");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1=';' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRefinementAccess().getSemicolonKeyword_1());
    }
)
;





// Entry rule entryRuleComponentRefinement
entryRuleComponentRefinement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getComponentRefinementRule()); }
	 iv_ruleComponentRefinement=ruleComponentRefinement 
	 { $current=$iv_ruleComponentRefinement.current; } 
	 EOF 
;

// Rule ComponentRefinement
ruleComponentRefinement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getComponentRefinementAccess().getLabelRefinementParserRuleCall_0()); 
    }
    this_LabelRefinement_0=ruleLabelRefinement
    { 
        $current = $this_LabelRefinement_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getComponentRefinementAccess().getButtonRefinementParserRuleCall_1()); 
    }
    this_ButtonRefinement_1=ruleButtonRefinement
    { 
        $current = $this_ButtonRefinement_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleButtonRefinement
entryRuleButtonRefinement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getButtonRefinementRule()); }
	 iv_ruleButtonRefinement=ruleButtonRefinement 
	 { $current=$iv_ruleButtonRefinement.current; } 
	 EOF 
;

// Rule ButtonRefinement
ruleButtonRefinement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'Button' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getButtonRefinementAccess().getNameButtonKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getButtonRefinementRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "Button");
	    }

)
)	otherlv_1='from:' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getButtonRefinementAccess().getFromKeyword_1());
    }
(
(
		lv_id_2_0=RULE_STRING
		{
			newLeafNode(lv_id_2_0, grammarAccess.getButtonRefinementAccess().getIdSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getButtonRefinementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_2_0, 
        		"STRING");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getButtonRefinementAccess().getPropertiesPropertiesParserRuleCall_3_0()); 
	    }
		lv_properties_3_0=ruleProperties		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getButtonRefinementRule());
	        }
       		set(
       			$current, 
       			"properties",
        		lv_properties_3_0, 
        		"Properties");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleLabelRefinement
entryRuleLabelRefinement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLabelRefinementRule()); }
	 iv_ruleLabelRefinement=ruleLabelRefinement 
	 { $current=$iv_ruleLabelRefinement.current; } 
	 EOF 
;

// Rule LabelRefinement
ruleLabelRefinement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'Label' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getLabelRefinementAccess().getNameLabelKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLabelRefinementRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "Label");
	    }

)
)	otherlv_1='from: ' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLabelRefinementAccess().getFromKeyword_1());
    }
(
(
		lv_id_2_0=RULE_STRING
		{
			newLeafNode(lv_id_2_0, grammarAccess.getLabelRefinementAccess().getIdSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLabelRefinementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_2_0, 
        		"STRING");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLabelRefinementAccess().getPropertiesPropertiesParserRuleCall_3_0()); 
	    }
		lv_properties_3_0=ruleProperties		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLabelRefinementRule());
	        }
       		set(
       			$current, 
       			"properties",
        		lv_properties_3_0, 
        		"Properties");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleProperty
entryRuleProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPropertyRule()); }
	 iv_ruleProperty=ruleProperty 
	 { $current=$iv_ruleProperty.current; } 
	 EOF 
;

// Rule Property
ruleProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='get properties from:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPropertyAccess().getGetPropertiesFromKeyword_0());
    }
(
(
		lv_propertiesFile_1_0=RULE_STRING
		{
			newLeafNode(lv_propertiesFile_1_0, grammarAccess.getPropertyAccess().getPropertiesFileSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"propertiesFile",
        		lv_propertiesFile_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleUsedDescriptions
entryRuleUsedDescriptions returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUsedDescriptionsRule()); }
	 iv_ruleUsedDescriptions=ruleUsedDescriptions 
	 { $current=$iv_ruleUsedDescriptions.current; } 
	 EOF 
;

// Rule UsedDescriptions
ruleUsedDescriptions returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='use: ' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getUsedDescriptionsAccess().getUseKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUsedDescriptionsAccess().getDescriptionDescriptionTypeParserRuleCall_1_0()); 
	    }
		lv_description_1_0=ruleDescriptionType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUsedDescriptionsRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_1_0, 
        		"DescriptionType");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='as:' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUsedDescriptionsAccess().getAsKeyword_2_0());
    }
(
(
		lv_id_3_0=RULE_STRING
		{
			newLeafNode(lv_id_3_0, grammarAccess.getUsedDescriptionsAccess().getIdSTRINGTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUsedDescriptionsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_3_0, 
        		"STRING");
	    }

)
))?)
;





// Entry rule entryRuleDescriptionType
entryRuleDescriptionType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDescriptionTypeRule()); }
	 iv_ruleDescriptionType=ruleDescriptionType 
	 { $current=$iv_ruleDescriptionType.current; } 
	 EOF 
;

// Rule DescriptionType
ruleDescriptionType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDescriptionTypeAccess().getUIDescriptionImportParserRuleCall_0()); 
    }
    this_UIDescriptionImport_0=ruleUIDescriptionImport
    { 
        $current = $this_UIDescriptionImport_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDescriptionTypeAccess().getComplexComponentParserRuleCall_1()); 
    }
    this_ComplexComponent_1=ruleComplexComponent
    { 
        $current = $this_ComplexComponent_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleDefinition
entryRuleDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDefinitionRule()); }
	 iv_ruleDefinition=ruleDefinition 
	 { $current=$iv_ruleDefinition.current; } 
	 EOF 
;

// Rule Definition
ruleDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getDefinitionAccess().getConcreteDefitionComponentDefinitionParserRuleCall_0_0()); 
	    }
		lv_concreteDefition_0_0=ruleComponentDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDefinitionRule());
	        }
       		set(
       			$current, 
       			"concreteDefition",
        		lv_concreteDefition_0_0, 
        		"ComponentDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1=';' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDefinitionAccess().getSemicolonKeyword_1());
    }
)
;





// Entry rule entryRuleTypeDefinition
entryRuleTypeDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeDefinitionRule()); }
	 iv_ruleTypeDefinition=ruleTypeDefinition 
	 { $current=$iv_ruleTypeDefinition.current; } 
	 EOF 
;

// Rule TypeDefinition
ruleTypeDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='type: ' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTypeDefinitionAccess().getTypeKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeDefinitionAccess().getTypeTypeParserRuleCall_1_0()); 
	    }
		lv_type_1_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeDefinitionRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleType
entryRuleType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	 iv_ruleType=ruleType 
	 { $current=$iv_ruleType.current; } 
	 EOF 
;

// Rule Type
ruleType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_id_0_1=	'WINDOW' 
    {
        newLeafNode(lv_id_0_1, grammarAccess.getTypeAccess().getIdWINDOWKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeRule());
	        }
       		setWithLastConsumed($current, "id", lv_id_0_1, null);
	    }

    |		lv_id_0_2=	'INNERCOMPLEX' 
    {
        newLeafNode(lv_id_0_2, grammarAccess.getTypeAccess().getIdINNERCOMPLEXKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeRule());
	        }
       		setWithLastConsumed($current, "id", lv_id_0_2, null);
	    }

)

)
)
;





// Entry rule entryRuleUIDescriptionImport
entryRuleUIDescriptionImport returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUIDescriptionImportRule()); }
	 iv_ruleUIDescriptionImport=ruleUIDescriptionImport 
	 { $current=$iv_ruleUIDescriptionImport.current; } 
	 EOF 
;

// Rule UIDescriptionImport
ruleUIDescriptionImport returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_descriptionName_0_0=RULE_STRING
		{
			newLeafNode(lv_descriptionName_0_0, grammarAccess.getUIDescriptionImportAccess().getDescriptionNameSTRINGTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUIDescriptionImportRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"descriptionName",
        		lv_descriptionName_0_0, 
        		"STRING");
	    }

)
)
;





// Entry rule entryRuleComplexComponent
entryRuleComplexComponent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getComplexComponentRule()); }
	 iv_ruleComplexComponent=ruleComplexComponent 
	 { $current=$iv_ruleComplexComponent.current; } 
	 EOF 
;

// Rule ComplexComponent
ruleComplexComponent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getComplexComponentAccess().getMultiselectionParserRuleCall()); 
    }
    this_Multiselection_0=ruleMultiselection
    { 
        $current = $this_Multiselection_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleMultiselection
entryRuleMultiselection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMultiselectionRule()); }
	 iv_ruleMultiselection=ruleMultiselection 
	 { $current=$iv_ruleMultiselection.current; } 
	 EOF 
;

// Rule Multiselection
ruleMultiselection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_descriptionName_0_0=	'Multiselection' 
    {
        newLeafNode(lv_descriptionName_0_0, grammarAccess.getMultiselectionAccess().getDescriptionNameMultiselectionKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMultiselectionRule());
	        }
       		setWithLastConsumed($current, "descriptionName", lv_descriptionName_0_0, "Multiselection");
	    }

)
)(
(
		lv_inputType_1_0=RULE_INPUT_DESCRIPTION
		{
			newLeafNode(lv_inputType_1_0, grammarAccess.getMultiselectionAccess().getInputTypeINPUT_DESCRIPTIONTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMultiselectionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"inputType",
        		lv_inputType_1_0, 
        		"INPUT_DESCRIPTION");
	    }

)
)?)
;





// Entry rule entryRuleComponentDefinition
entryRuleComponentDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getComponentDefinitionRule()); }
	 iv_ruleComponentDefinition=ruleComponentDefinition 
	 { $current=$iv_ruleComponentDefinition.current; } 
	 EOF 
;

// Rule ComponentDefinition
ruleComponentDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getComponentDefinitionAccess().getLabelDefinitionParserRuleCall_0()); 
    }
    this_LabelDefinition_0=ruleLabelDefinition
    { 
        $current = $this_LabelDefinition_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getComponentDefinitionAccess().getButtonDefinitionParserRuleCall_1()); 
    }
    this_ButtonDefinition_1=ruleButtonDefinition
    { 
        $current = $this_ButtonDefinition_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleButtonDefinition
entryRuleButtonDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getButtonDefinitionRule()); }
	 iv_ruleButtonDefinition=ruleButtonDefinition 
	 { $current=$iv_ruleButtonDefinition.current; } 
	 EOF 
;

// Rule ButtonDefinition
ruleButtonDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'Button' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getButtonDefinitionAccess().getNameButtonKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getButtonDefinitionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "Button");
	    }

)
)	otherlv_1='as:' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getButtonDefinitionAccess().getAsKeyword_1());
    }
(
(
		lv_id_2_0=RULE_STRING
		{
			newLeafNode(lv_id_2_0, grammarAccess.getButtonDefinitionAccess().getIdSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getButtonDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_2_0, 
        		"STRING");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getButtonDefinitionAccess().getPropertiesPropertiesParserRuleCall_3_0()); 
	    }
		lv_properties_3_0=ruleProperties		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getButtonDefinitionRule());
	        }
       		set(
       			$current, 
       			"properties",
        		lv_properties_3_0, 
        		"Properties");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleProperties
entryRuleProperties returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPropertiesRule()); }
	 iv_ruleProperties=ruleProperties 
	 { $current=$iv_ruleProperties.current; } 
	 EOF 
;

// Rule Properties
ruleProperties returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='->' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPropertiesAccess().getHyphenMinusGreaterThanSignKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertiesAccess().getPropertiesDefinitionsPropertiesDefinitionParserRuleCall_1_0()); 
	    }
		lv_propertiesDefinitions_1_0=rulePropertiesDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertiesRule());
	        }
       		add(
       			$current, 
       			"propertiesDefinitions",
        		lv_propertiesDefinitions_1_0, 
        		"PropertiesDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRulePropertiesDefinition
entryRulePropertiesDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPropertiesDefinitionRule()); }
	 iv_rulePropertiesDefinition=rulePropertiesDefinition 
	 { $current=$iv_rulePropertiesDefinition.current; } 
	 EOF 
;

// Rule PropertiesDefinition
rulePropertiesDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='propertyKey=' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPropertiesDefinitionAccess().getPropertyKeyKeyword_0_0());
    }
(
(
		lv_propertyKey_1_0=RULE_STRING
		{
			newLeafNode(lv_propertyKey_1_0, grammarAccess.getPropertiesDefinitionAccess().getPropertyKeySTRINGTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPropertiesDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"propertyKey",
        		lv_propertyKey_1_0, 
        		"STRING");
	    }

)
))
    |(	otherlv_2='text=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPropertiesDefinitionAccess().getTextKeyword_1_0());
    }
(
(
		lv_text_3_0=RULE_STRING
		{
			newLeafNode(lv_text_3_0, grammarAccess.getPropertiesDefinitionAccess().getTextSTRINGTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPropertiesDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"text",
        		lv_text_3_0, 
        		"STRING");
	    }

)
))
    |(	otherlv_4='interactiontype=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPropertiesDefinitionAccess().getInteractiontypeKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertiesDefinitionAccess().getInteractiontypeInteractiontypeParserRuleCall_2_1_0()); 
	    }
		lv_interactiontype_5_0=ruleInteractiontype		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertiesDefinitionRule());
	        }
       		add(
       			$current, 
       			"interactiontype",
        		lv_interactiontype_5_0, 
        		"Interactiontype");
	        afterParserOrEnumRuleCall();
	    }

)
)+))
;





// Entry rule entryRuleLabelDefinition
entryRuleLabelDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLabelDefinitionRule()); }
	 iv_ruleLabelDefinition=ruleLabelDefinition 
	 { $current=$iv_ruleLabelDefinition.current; } 
	 EOF 
;

// Rule LabelDefinition
ruleLabelDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'Label' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getLabelDefinitionAccess().getNameLabelKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLabelDefinitionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "Label");
	    }

)
)	otherlv_1='as' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLabelDefinitionAccess().getAsKeyword_1());
    }
(
(
		lv_id_2_0=RULE_STRING
		{
			newLeafNode(lv_id_2_0, grammarAccess.getLabelDefinitionAccess().getIdSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLabelDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_2_0, 
        		"STRING");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLabelDefinitionAccess().getPropertiesPropertiesParserRuleCall_3_0()); 
	    }
		lv_properties_3_0=ruleProperties		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLabelDefinitionRule());
	        }
       		set(
       			$current, 
       			"properties",
        		lv_properties_3_0, 
        		"Properties");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleInteractiontype
entryRuleInteractiontype returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInteractiontypeRule()); }
	 iv_ruleInteractiontype=ruleInteractiontype 
	 { $current=$iv_ruleInteractiontype.current; } 
	 EOF 
;

// Rule Interactiontype
ruleInteractiontype returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_id_0_1=	'Click' 
    {
        newLeafNode(lv_id_0_1, grammarAccess.getInteractiontypeAccess().getIdClickKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInteractiontypeRule());
	        }
       		setWithLastConsumed($current, "id", lv_id_0_1, null);
	    }

    |		lv_id_0_2=	'ChangeText' 
    {
        newLeafNode(lv_id_0_2, grammarAccess.getInteractiontypeAccess().getIdChangeTextKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInteractiontypeRule());
	        }
       		setWithLastConsumed($current, "id", lv_id_0_2, null);
	    }

)

)
)
;





RULE_INPUT_DESCRIPTION : '<' ('\\' .|~(('<'|'>')))* '>';

RULE_WS : (' '|'\t'|'\r'|'\n'|',')+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ANY_OTHER : .;


