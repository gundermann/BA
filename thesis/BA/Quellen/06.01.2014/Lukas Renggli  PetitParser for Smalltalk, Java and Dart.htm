<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><title>Lukas Renggli: PetitParser for Smalltalk, Java and Dart</title><link rel="stylesheet" type="text/css" media="screen, projection" href="Lukas%20Renggli%20%20PetitParser%20for%20Smalltalk,%20Java%20and%20Dart-Dateien/screen.css"><link rel="stylesheet" type="text/css" media="print" href="Lukas%20Renggli%20%20PetitParser%20for%20Smalltalk,%20Java%20and%20Dart-Dateien/print.css"><!--[if IE]><link rel="stylesheet" type="text/css" media="screen, projection" href="/include/css/ie.css"/><![endif]--><link rel="stylesheet" type="text/css" href="Lukas%20Renggli%20%20PetitParser%20for%20Smalltalk,%20Java%20and%20Dart-Dateien/default.css"><link rel="stylesheet" type="text/css" href="Lukas%20Renggli%20%20PetitParser%20for%20Smalltalk,%20Java%20and%20Dart-Dateien/shout.css"><script async="" src="Lukas%20Renggli%20%20PetitParser%20for%20Smalltalk,%20Java%20and%20Dart-Dateien/cbgapi.loaded_1"></script><script async="" src="Lukas%20Renggli%20%20PetitParser%20for%20Smalltalk,%20Java%20and%20Dart-Dateien/cbgapi.loaded_0"></script><script type="text/javascript" src="Lukas%20Renggli%20%20PetitParser%20for%20Smalltalk,%20Java%20and%20Dart-Dateien/prototype.js"></script><script type="text/javascript" src="Lukas%20Renggli%20%20PetitParser%20for%20Smalltalk,%20Java%20and%20Dart-Dateien/effects.js"></script><script type="text/javascript" src="Lukas%20Renggli%20%20PetitParser%20for%20Smalltalk,%20Java%20and%20Dart-Dateien/controls.js"></script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><meta http-equiv="Content-Script-Type" content="text/javascript"><meta name="generator" content="Pier - Magritte - Seaside"><link rel="top" href="http://www.lukas-renggli.ch/"><link rel="up" href="http://www.lukas-renggli.ch/blog"><link rel="previous" href="http://www.lukas-renggli.ch/blog/petitparser-2"><link rel="next" href="http://www.lukas-renggli.ch/blog/petitparser-for-dart-reloaded"><link rel="canonical" href="http://www.lukas-renggli.ch/blog/petitparser-java-dart"><meta name="robots" content="index,follow"><meta name="author" content="Lukas Renggli"><meta name="keywords" content="Lukas Renggli PetitParser for Smalltalk, Java and Dart"><link rel="alternate" type="application/rss+xml" title="Talking Meta" href="http://www.lukas-renggli.ch/blog?view=PBEntriesRssView"></head><body onload="onLoad()" class="post viewcommand posthtmlview"><div id="page"> 	<div id="area"> 		<div id="head"> 			<h1><a title="Home" class="internal page" href="http://www.lukas-renggli.ch/">Lukas Renggli</a></h1> 			<div class="find"><input autocomplete="off" id="id1" onfocus="if(value=='Search lukas-renggli.ch'){value='';style.color=null}" style="color: #aaa" value="Search lukas-renggli.ch" onkeypress="if((window.event ? window.event.keyCode : event.which) == 13){id3.activate(); return false}; return true" name="4" class="text" type="text"><div style="display: none;" id="id8"></div></div> 			<div class="clear"></div> 		</div> 		<div class="menu level1"><ul><li><a class="path blog" title="Talking Meta" href="http://www.lukas-renggli.ch/blog">Blog</a></li><li><a title="Contact" class="page" href="http://www.lukas-renggli.ch/contact">Contact</a></li></ul><div class="clear"></div></div> 		<div class="menu level2"><div class="clear"></div></div> 		<div class="menu level3"><div class="clear"></div></div> 		<div id="name"><h1><a name="46087346"></a>PetitParser for Smalltalk, Java and Dart <div id="___plusone_0" style="text-indent: 0px; margin: 0px; padding: 0px; background: none repeat scroll 0% 0% transparent; border-style: none; float: none; line-height: normal; font-size: 1px; vertical-align: baseline; display: inline-block; width: 32px; height: 20px;"><iframe title="+1" data-gapiattached="true" src="Lukas%20Renggli%20%20PetitParser%20for%20Smalltalk,%20Java%20and%20Dart-Dateien/fastbutton.htm" name="I0_1420547572458" id="I0_1420547572458" vspace="0" tabindex="0" style="position: static; top: 0px; width: 32px; margin: 0px; border-style: none; left: 0px; visibility: visible; height: 20px;" scrolling="no" marginwidth="0" marginheight="0" hspace="0" frameborder="0" width="100%"></iframe></div></h1></div> 		<div id="side"> 			<h2>Archive</h2> 			<ul><li><a href="http://www.lukas-renggli.ch/blog/petitparser-java-dart?_k=5PVWETcB&amp;9">June 2012</a> (1)</li><li><a href="http://www.lukas-renggli.ch/blog/petitparser-java-dart?_k=5PVWETcB&amp;10">November 2010</a> (1)</li><li><a href="http://www.lukas-renggli.ch/blog/petitparser-java-dart?_k=5PVWETcB&amp;11">October 2010</a> (2)</li><li><a href="http://www.lukas-renggli.ch/blog/petitparser-java-dart?_k=5PVWETcB&amp;12">September 2010</a> (1)</li><li><a href="http://www.lukas-renggli.ch/blog/petitparser-java-dart?_k=5PVWETcB&amp;13">March 2010</a> (2)</li><li><a href="http://www.lukas-renggli.ch/blog/petitparser-java-dart?_k=5PVWETcB&amp;14">February 2010</a> (2)</li><li><a href="http://www.lukas-renggli.ch/blog/petitparser-java-dart?_k=5PVWETcB&amp;15">January 2010</a> (1)</li><li><a href="http://www.lukas-renggli.ch/blog/petitparser-java-dart?_k=5PVWETcB&amp;16">November 2009</a> (2)</li><li><a href="http://www.lukas-renggli.ch/blog/petitparser-java-dart?_k=5PVWETcB&amp;17">October 2009</a> (2)</li><li><a href="http://www.lukas-renggli.ch/blog/petitparser-java-dart?_k=5PVWETcB&amp;18">September 2009</a> (3)</li></ul> 			<h2>Tags</h2> 			<ul><li><a href="http://www.lukas-renggli.ch/blog/petitparser-java-dart?_k=5PVWETcB&amp;19">esug</a> (9)</li><li><a href="http://www.lukas-renggli.ch/blog/petitparser-java-dart?_k=5PVWETcB&amp;20">magritte</a> (9)</li><li><a href="http://www.lukas-renggli.ch/blog/petitparser-java-dart?_k=5PVWETcB&amp;21">omnibrowser</a> (8)</li><li><a href="http://www.lukas-renggli.ch/blog/petitparser-java-dart?_k=5PVWETcB&amp;22">pharo</a> (15)</li><li><a href="http://www.lukas-renggli.ch/blog/petitparser-java-dart?_k=5PVWETcB&amp;23">pier</a> (15)</li><li><a href="http://www.lukas-renggli.ch/blog/petitparser-java-dart?_k=5PVWETcB&amp;24">seaside</a> (58)</li><li><a href="http://www.lukas-renggli.ch/blog/petitparser-java-dart?_k=5PVWETcB&amp;25">smalltalk</a> (29)</li><li><a href="http://www.lukas-renggli.ch/blog/petitparser-java-dart?_k=5PVWETcB&amp;26">squeak</a> (10)</li><li><a href="http://www.lukas-renggli.ch/blog/petitparser-java-dart?_k=5PVWETcB&amp;27">talk</a> (12)</li><li><a href="http://www.lukas-renggli.ch/blog/petitparser-java-dart?_k=5PVWETcB&amp;28">tutorial</a> (9)</li></ul> 		</div> 		<div id="main"> 			<p>I am happy to announce initial ports of <a title="http://scg.unibe.ch/research/helvetia/petitparser" class="external" href="http://scg.unibe.ch/research/helvetia/petitparser">PetitParser</a> to <a title="https://github.com/renggli/PetitParserJava" class="external" href="https://github.com/renggli/PetitParserJava">Java</a> and <a title="https://github.com/renggli/PetitParserDart" class="external" href="https://github.com/renggli/PetitParserDart">Dart</a>. The repositories contain complete and usable ports of the original Smalltalk implementation, unit tests and example grammars.</p><p>The
 three implementations are very similar in their API and the supported 
features. If possible, I tried to adapt common practices and features of
 the target language. In this blog post I like to point out some 
differences and design decisions I took.</p><h2><a name="119811538"></a> Production rules</h2><p>In Smalltalk, the parser that accepts identifiers looks like this:</p><pre>parser := #letter asParser , (#letter asParser / #digit asParser) star.</pre><p>In Java the same parser looks like this:</p><pre>Parser parser = letter().seq(letter().or(digit()).star());</pre><p>Instead
 of the custom operators I use nested function calls. It is visually not
 as readable as the Smalltalk version, but still it is quite to the 
point.</p><p>In Dart the definition of the identifier parser is similar:</p><pre>var parser = letter().seq(letter().or(digit()).star());</pre><p>Even
 though Dart allows one to overload the standard operators I decided not
 to use this feature: The fixed set of operators and the fixed operator 
precedence is simply too confusing.</p><h2><a name="232948888"></a> Production actions</h2><p>To attach a production action to a number parser in Smalltalk one writes:</p><pre>parser := #digit asParser plus flatten ==&gt; [ :input | input asNumber ].</pre><p>Due to the lack of closures the Java solution gets a bit bulky. Hopefully this issue will finally be fixed with <a title="http://openjdk.java.net/projects/lambda/" class="external" href="http://openjdk.java.net/projects/lambda/">Java 8</a>. The type declarations are quite nice as documentation of input and output values of the production action:</p><pre>Parser parser = digit().plus().flatten().map(new Function&lt;String, Integer&gt;() {
    @Override
    public Integer apply(String input) {
      return Integer.valueOf(input);
    }
});</pre><p>Luckily Dart has closures, and furthermore we can skip the type declarations:</p><pre>var parser = digit().plus().flatten().map((input) =&gt; Math.parseInt(input));</pre><h2><a name="208685393"></a> Composite grammars</h2><p>For the definition of complex grammars with possibly recursive rules you subclass <code>CompositeParser</code> in all three implementations:</p><p>The details of the Smalltalk implementation are explained in this <a title="Composite Grammars with PetitParser" class="internal post" href="http://www.lukas-renggli.ch/blog/petitparser-2">blog post</a>.
 Production rules are defined as methods and instance-variables of the 
same name. The parser constructor initializes all production rules to 
dummy parsers that are eventually replaced by the actual definitions 
using reflection. As a real-world example have a look at this <a title="http://lukas-renggli.ch/dropbox/petitparser/grammars/PetitJson-Core.st" class="external" href="http://lukas-renggli.ch/dropbox/petitparser/grammars/PetitJson-Core.st">JSON grammar</a>.</p><p>The Java solution is very similar to the one in Smalltalk. To make things a bit more Java-ish, methods are annotated with <code>@Production</code>
 to mark them as a production. In the future, I plan to avoid the use of
 inner classes for production actions by introducing new annotation 
called <code>@Action</code>. Again there is a <a title="https://github.com/renggli/PetitParserJava/tree/master/grammar/org/petitparser/grammar/json" class="external" href="https://github.com/renggli/PetitParserJava/tree/master/grammar/org/petitparser/grammar/json">JSON grammar</a> to look at.</p><p>Due
 to the (current) lack of reflection in Dart I had to come up with 
something else. For Dart I introduced a DSL that allows one to define 
productions, reference productions, redefine productions and assign 
production actions to existing productions. The <a title="https://github.com/renggli/PetitParserDart/blob/master/lib/Composite.dart" class="external" href="https://github.com/renggli/PetitParserDart/blob/master/lib/Composite.dart">implementation</a> is simple and I like it much better than the others. The <a title="https://github.com/renggli/PetitParserDart/tree/master/lib/src/json" class="external" href="https://github.com/renggli/PetitParserDart/tree/master/lib/src/json">JSON grammar</a> in Dart is pretty concise.</p><h2><a name="25496614"></a> Performance</h2><p>Comparing
 the performance of the implementations is interesting. For this 
preliminary evaluation I took the XML parser and parsed 2000 times a 
medium sized XML file. This is the ranking:</p><ol><li> Java: 815ms (Java HotSpot 64-Bit 1.7)</li><li> Smalltalk: 4069ms (Pharo 1.3 on Cog)</li><li> Dart: 6156ms (Dart SDK version 13851, M1)</li><li> <del>Dart: 7048ms (Dart SDK version 8638)</del></li><li> <del>Dart: 14332ms (Dart SDK version 8344)</del></li></ol><p>Interestingly
 Java is doing really well, even if I use auto-boxed characters 
everywhere and didn’t care to optimize the implementation yet.</p><p>The
 Smalltalk implementation is about 4 times slower. With this 
implementation I worked the longest and I doubt that it can be optimized
 further.</p><p>Dart lost this evaluation, but I am sure that the code 
can be further improved. I am suspecting that a problem is that Dart has
 no notion of characters and needs to represent them as integers or 
single character strings. Also, in Dart there is no efficient way to 
figure out if a character is a whitespace, a letter or a digit. <del>To do this correctly I had to fall back to regular expressions, which likely kills an otherwise fast VM.</del> The latest implementation works directly with character codes.</p><h2><a name="112805151"></a> Availability</h2><p>To sum up, the three implementations are open-source and available in their respective public repositories:</p><ul><li> Smalltalk: <a title="http://scg.unibe.ch/research/helvetia/petitparser" class="external" href="http://scg.unibe.ch/research/helvetia/petitparser">http://scg.unibe.ch/research/helvetia/petitparser</a></li><li> Java: <a title="https://github.com/renggli/PetitParserJava" class="external" href="https://github.com/renggli/PetitParserJava">https://github.com/renggli/PetitParserJava</a></li><li> Dart: <a title="https://github.com/renggli/PetitParserDart" class="external" href="https://github.com/renggli/PetitParserDart">https://github.com/renggli/PetitParserDart</a></li></ul><p>I am happy to take patches or suggestions on how to improve the Java or Dart version.</p><div class="meta">Posted <span class="author">by Lukas Renggli</span> <span class="publication">at 10 June 2012, 6:11 pm</span> <span class="tags">with tags <a href="http://www.lukas-renggli.ch/blog/petitparser-java-dart?_k=5PVWETcB&amp;29">petitparser</a>, <a href="http://www.lukas-renggli.ch/blog/petitparser-java-dart?_k=5PVWETcB&amp;30">smalltalk</a>, <a href="http://www.lukas-renggli.ch/blog/petitparser-java-dart?_k=5PVWETcB&amp;31">java</a>, <a href="http://www.lukas-renggli.ch/blog/petitparser-java-dart?_k=5PVWETcB&amp;32">dart</a></span> <a class="link" href="http://www.lukas-renggli.ch/blog/petitparser-java-dart">link</a> </div><div class="comments"><h2>Comments</h2><div class="comment"><a name="429566704"></a><p>So,
 in Dart, charCodeAt() for Unicode codepoint integer comparison is 
pretty much what you’ll have to do, and port the lexical queries into 
this.</p><div class="meta">Posted <span class="author">by <a href="http://briantrice.com/">Brian T. Rice</a></span> <span class="publication">at 10 June 2012, 6:59 pm</span> <a class="link" href="http://www.lukas-renggli.ch/blog/petitparser-java-dart#429566704">link</a> </div></div></div><div class="subscribe"><a href="http://www.lukas-renggli.ch/blog?view=PBEntriesRssView">Entries (RSS)</a><span class="rssComments"> and <a href="http://www.lukas-renggli.ch/blog?view=PBCommentsRssView">Comments (RSS)</a></span></div>                         <script async="" src="Lukas%20Renggli%20%20PetitParser%20for%20Smalltalk,%20Java%20and%20Dart-Dateien/adsbygoogle.js"></script> <div style="text-align: center; margin-top: 15px;"><ins class="adsbygoogle" style="display:inline-block;width:468px;height:60px" data-ad-client="ca-pub-6784939820279837" data-ad-slot="7370839522"></ins></div> <script>(adsbygoogle = window.adsbygoogle || []).push({});</script> 		</div> 		<div style="clear: both"></div> 	</div> 	<div id="foot"><p>Copyright © 6 January 2015 <a title="Contact" class="internal page" href="http://www.lukas-renggli.ch/contact">Lukas Renggli</a>. All rights reserved.<br>Powered by <a title="http://www.seaside.st/" class="external" href="http://www.seaside.st/">Seaside</a>, <a title="Magritte" class="internal protected page" href="http://www.lukas-renggli.ch/smalltalk/magritte">Magritte</a>, and <a title="http://www.piercms.com/" class="external" href="http://www.piercms.com/">Pier</a></p></div> </div> <div id="self"><ul><li><a accesskey="l" title="Login (l)" class="post" href="http://www.lukas-renggli.ch/blog/petitparser-java-dart?_k=5PVWETcB&amp;command=PULogin&amp;_n&amp;33">Login</a></li></ul></div> <div id="root"></div> <script type="text/javascript">/*<![CDATA[*/var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));/*]]>*/</script><script src="Lukas%20Renggli%20%20PetitParser%20for%20Smalltalk,%20Java%20and%20Dart-Dateien/ga.js" type="text/javascript"></script><script type="text/javascript">/*<![CDATA[*/var pageTracker = _gat._getTracker('UA-2075184-1');
pageTracker._initData();
pageTracker._trackPageview();/*]]>*/</script> <script gapi_processed="true" type="text/javascript" src="Lukas%20Renggli%20%20PetitParser%20for%20Smalltalk,%20Java%20and%20Dart-Dateien/plusone.js"></script><script type="text/javascript">/*<![CDATA[*/function onLoad(){id3=new Ajax.Autocompleter('id1','id8','http://www.lukas-renggli.ch/blog/petitparser-java-dart',{'evalScripts':true,'parameters':['_k=5PVWETcB','5'].join('&'),'afterUpdateElement':function(){new Ajax.Request('http://www.lukas-renggli.ch/blog/petitparser-java-dart',{'parameters':['_k=5PVWETcB','6','7='+arguments[1].id.match(/^_p([0-9]+)$/)[1]].join('&')})}})}/*]]>*/</script><iframe tabindex="-1" style="width: 1px; height: 1px; position: absolute; top: -100px;" src="Lukas%20Renggli%20%20PetitParser%20for%20Smalltalk,%20Java%20and%20Dart-Dateien/postmessageRelay.htm" id="oauth2relay223915743" name="oauth2relay223915743"></iframe></body></html>